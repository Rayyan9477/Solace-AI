[tool:pytest]
# Pytest Configuration for Solace-AI Testing Framework

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Minimum version
minversion = 8.0

# Add current directory to Python path
addopts = 
    # Coverage reporting
    --cov=src
    --cov-report=html:tests/coverage_html
    --cov-report=term-missing
    --cov-report=xml:tests/coverage.xml
    --cov-branch
    # Test output formatting
    --html=tests/reports/report.html
    --self-contained-html
    --json-report --json-report-file=tests/reports/report.json
    # Verbose output
    -v
    # Show local variables in tracebacks
    --tb=short
    # Fail on first failure for quick debugging
    # --maxfail=1
    # Parallel execution (uncomment for faster tests)
    # -n auto
    # Strict mode - warnings as errors
    --strict-markers
    --strict-config
    # Asyncio support
    --asyncio-mode=auto

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    security: Security-focused tests
    auth: Authentication and authorization tests
    api: API endpoint tests
    slow: Slow running tests
    quick: Quick tests for CI pipeline
    mock: Tests that use mocking
    database: Tests that interact with databases
    external: Tests that require external services
    hipaa: HIPAA compliance validation tests
    smoke: Smoke tests for basic functionality
    regression: Regression tests for bug fixes

# Test timeout (in seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:jose
    ignore::UserWarning:passlib
    # Treat security warnings as errors
    error::UserWarning:.*security.*
    error::UserWarning:.*auth.*

# Log configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Environment variables for testing
env = 
    ENVIRONMENT = testing
    JWT_SECRET_KEY = test_secret_key_for_pytest_only_not_for_production_use_minimum_32_chars
    ACCESS_TOKEN_EXPIRE_MINUTES = 5
    REFRESH_TOKEN_EXPIRE_DAYS = 1
    TESTING = true
    LOG_LEVEL = DEBUG